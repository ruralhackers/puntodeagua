// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                       String  @id @default(uuid()) @db.Uuid
  userId                   String  @db.Uuid
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid()) @db.Uuid
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  email         String    @unique
  emailVerified DateTime? @map("email_verified") // new field

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  lockedAt  DateTime? @map("locked_at")

  // Custom fields
  username  String  @unique @default(cuid())
  credits   Int     @default(4)
  admin     Boolean @default(false)
  moderator Boolean @default(false)
  verified  Boolean @default(false)
  banned    Boolean @default(false)
  nsfw      Boolean @default(false)

  // Profile fields
  profileViewCount Int @default(0) @map("profile_view_count")
  promptCount      Int @default(0) @map("prompt_count")
  favCount         Int @default(0) @map("fav_count")
  searchCount      Int @default(0) @map("search_count")

  // Streak fields
  streakDays  Int       @default(0) @map("streak_days")
  streakStart DateTime? @map("streak_start")
  streakEnd   DateTime? @map("streak_end")

  // NextAuth relations
  accounts Account[]
  sessions Session[]

  @@index([email])
  @@index([username])
  @@index([admin])
  @@index([moderator])
  @@index([verified])
  @@index([banned])
  @@map("users")
}
